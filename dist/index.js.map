{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LNPI = require( '@stdlib/constants-float64-ln-pi' );\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the probability density function (logPDF) for a Cauchy distribution with location parameter `x0` and scale parameter `gamma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} x0 - location parameter\n* @param {PositiveNumber} gamma - scale parameter\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 2.0, 1.0, 1.0 );\n* // returns ~-1.838\n*\n* @example\n* var y = logpdf( 4.0, 3.0, 0.1 );\n* // returns ~-3.457\n*\n* @example\n* var y = logpdf( 4.0, 3.0, 3.0 );\n* // returns ~-2.349\n*\n* @example\n* var y = logpdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 2.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 2.0, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logpdf( 2.0, 1.0, -2.0 );\n* // returns NaN\n*/\nfunction logpdf( x, x0, gamma ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( gamma ) ||\n\t\tisnan( x0 ) ||\n\t\tgamma <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn -( LNPI + ln( gamma ) + log1p( pow( (x-x0)/gamma, 2.0 ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = logpdf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LNPI = require( '@stdlib/constants-float64-ln-pi' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the probability density function (logPDF) for a Cauchy distribution with location parameter `x0` and scale parameter `gamma`.\n*\n* @param {number} x0 - location parameter\n* @param {PositiveNumber} gamma - scale parameter\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 4.0, 2.0 );\n*\n* var y = logpdf( 10.0 );\n* // returns ~-4.14\n*\n* y = logpdf( 3.0 );\n* // returns ~-2.061\n*/\nfunction factory( x0, gamma ) {\n\tif (\n\t\tisnan( gamma ) ||\n\t\tisnan( x0 ) ||\n\t\tgamma <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the probability density function (logPDF) for a Cauchy distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logPDF\n\t*\n\t* @example\n\t* var y = logpdf( 2.3 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn -( LNPI + ln( gamma ) + log1p( pow( (x-x0)/gamma, 2.0 ) ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Cauchy distribution logarithm of probability density function (logPDF).\n*\n* @module @stdlib/stats-base-dists-cauchy-logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats-base-dists-cauchy-logpdf' );\n*\n* var y = logpdf( 2.0, 0.0, 1.0 );\n* // returns ~-2.765\n*\n* @example\n* var factory = require( '@stdlib/stats-base-dists-cauchy-logpdf' ).factory;\n*\n* var logpdf = factory( 10.0, 2.0 );\n*\n* var y = logpdf( 10.0 );\n* // returns ~-1.839\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAK,QAAS,8BAA+B,EAC7CC,EAAO,QAAS,iCAAkC,EA0CtD,SAASC,EAAQC,EAAGC,EAAIC,EAAQ,CAC/B,OACCR,EAAOM,CAAE,GACTN,EAAOQ,CAAM,GACbR,EAAOO,CAAG,GACVC,GAAS,EAEF,IAED,EAAGJ,EAAOD,EAAIK,CAAM,EAAIP,EAAOC,GAAMI,EAAEC,GAAIC,EAAO,CAAI,CAAE,EAChE,CAKAT,EAAO,QAAUM,ICnFjB,IAAAI,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,iCAAkC,EAC9DC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAK,QAAS,8BAA+B,EAC7CC,EAAO,QAAS,iCAAkC,EAqBtD,SAASC,EAASC,EAAIC,EAAQ,CAC7B,GACCP,EAAOO,CAAM,GACbP,EAAOM,CAAG,GACVC,GAAS,EAET,OAAOR,EAAkB,GAAI,EAE9B,OAAOS,EAaP,SAASA,EAAQC,EAAI,CACpB,OAAKT,EAAOS,CAAE,EACN,IAED,EAAGL,EAAOD,EAAII,CAAM,EAAIN,EAAOC,GAAMO,EAAEH,GAAIC,EAAO,CAAI,CAAE,EAChE,CACD,CAKAT,EAAO,QAAUO,ICtCjB,IAAIK,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "log1p", "pow", "ln", "LNPI", "logpdf", "x", "x0", "gamma", "require_factory", "__commonJSMin", "exports", "module", "constantFunction", "isnan", "log1p", "pow", "ln", "LNPI", "factory", "x0", "gamma", "logpdf", "x", "setReadOnly", "main", "factory"]
}
